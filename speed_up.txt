Sub speed_up()

' The below functions alters the default behaviour in Excel. Generally speaking this should increase overall macro speed.

' if any of these features are needed within the code it is better to temporarily turn on the needed feature and turn it off again once it is no longer needed.

'   Turning features off
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False
    Application.DisplayStatusBar = False
    Application.EnableEvents = False

'   your code here
'   your code here
'   your code here
'   your code here

'   Turning features back on
    Application.Calculation = xlSemiautomatic
    Application.ScreenUpdating = True
    Application.DisplayStatusBar = True
    Application.EnableEvents = True

End Sub

Sub slow_feature_toggle(on_or_off As Boolean)

'   Another method for achieving the same results as speedUp(), using a boolean argument here allows for a simple one line call to toggle these features on/off,
'   This can be handy as it allows an easy reset during error trapping without all the extra code.

'   To use this subroutine simple call it with a boolean argument e.g. Call slow_feature_toggle(True)

    Application.ScreenUpdating = on_or_off
    Application.DisplayStatusBar = on_or_off
    Application.EnableEvents = on_or_off

'   Calc mode needs to be controlled via an if statement here as the default argument is not a boolean one. If you are looking for micro performance gains then
'   it is probably better to add a simple one liner to control the calc mode to avoid the branching here.
    Application.Calculation = IIf(on_or_off, xlSemiautomatic, xlCalculationManual)
        
End Sub
